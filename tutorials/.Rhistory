set.seed(1)
treatment <- rep(c("A", "B", "C", "D", "E"), each=20)
treatment
value=c( sample(2:5, 20 , replace=T) , sample(6:10, 20 , replace=T), sample(1:7, 20 , replace=T), sample(3:10, 20 , replace=T) , sample(10:20, 20 , replace=T) )
value
data=data.frame(treatment,value)
data
# What is the effect of the treatment on the value ?
model=lm( data$value ~ data$treatment )
ANOVA=aov(model)
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, 'data$treatment', conf.level=0.95)
TUKEY
install.packages("reticulate")
library(reticulate)
use_python("/Users/shuxiaochen/miniconda3/envs/cell/bin/python")
repl_python()
quit
import numpy as np
repl_python()
import numpy as np
repl_python()
mario <- import("mario.match")
library(tidyverse)
df1 = read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv")
df1
df1 <- df1 %>% slice_sample(prop = 0.1) %>% select(-X1)
df1
x_labels = df1 %>% select(cluster.info) %>% pull()
x_labels
df1 <- df1 %>% select(-cluster.info)
df1
# read in the second data
df2 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/wcctg-wb50k-cytof.csv")
df2 <- df2 %>% slice_sample(prop = 0.1) %>% select(-X1)
df2''
df2
y_labels = df2 %>% select(cluster.info) %>% pull()
df2 <- df2 %>% select(-cluster.info)
df2
mario.match <- import("mario.match")
Mario = mario.match$Mario()
mario = mario.match$Mario(df1, df2, normalization = True)
mario = mario.match$Mario(df1, df2, normalization = TRUE)
mario$compute_dist_ovlp(n_components = 20)
df1
mario$compute_dist_ovlp(n_components = 20)
mario$compute_dist_ovlp(n_components = as.integer(20))
_ = mario$compute_dist_ovlp(n_components = as.integer(20))
dist_ovlp, cancor_ovlp = mario$compute_dist_ovlp(n_components = as.integer(20))
dist_ovlp = mario$compute_dist_ovlp(n_components = as.integer(20))
dist_ovlp[[2]]
dist_ovlp[[1]]
mario$pecify_matching_params(1)
mario$specify_matching_params(1)
mario$dist
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=1, init_sparsity=3, verbose=TRUE)
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=NaN, verbose=TRUE)
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=None, verbose=TRUE)
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=NULL, verbose=TRUE)
library(reticulate)
library(tidyverse)
use_python("/Users/shuxiaochen/miniconda3/envs/cell/bin/python")
mario.match <- import("mario.match")
Mario = mario.match$Mario
# read in the first data
df1 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv")
df1 <- df1 %>% slice_sample(prop = 0.1) %>% select(-X1)
x_labels = df1 %>% select(cluster.info) %>% pull()
df1 <- df1 %>% select(-cluster.info)
# read in the second data
df2 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/wcctg-wb50k-cytof.csv")
df2 <- df2 %>% slice_sample(prop = 0.1) %>% select(-X1)
y_labels = df2 %>% select(cluster.info) %>% pull()
df2 <- df2 %>% select(-cluster.info)
mario = mario.match$Mario(df1, df2, normalization = TRUE)
dist_ovlp = mario$compute_dist_ovlp(n_components = as.integer(20))
mario$specify_matching_params(1)
mario$specify_matching_params(as.integer(1))
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=NULL, verbose=TRUE)
library(reticulate)
library(tidyverse)
use_python("/Users/shuxiaochen/miniconda3/envs/cell/bin/python")
mario.match <- import("mario.match")
Mario = mario.match$Mario
# read in the first data
df1 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv")
df1 <- df1 %>% slice_sample(prop = 0.1) %>% select(-X1)
x_labels = df1 %>% select(cluster.info) %>% pull()
df1 <- df1 %>% select(-cluster.info)
# read in the second data
df2 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/wcctg-wb50k-cytof.csv")
df2 <- df2 %>% slice_sample(prop = 0.1) %>% select(-X1)
y_labels = df2 %>% select(cluster.info) %>% pull()
df2 <- df2 %>% select(-cluster.info)
mario = mario.match$Mario(df1, df2, normalization = TRUE)
dist_ovlp = mario$compute_dist_ovlp(n_components = as.integer(20))
mario$specify_matching_params(as.integer(1))
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=NULL, verbose=TRUE)
library(reticulate)
library(tidyverse)
use_python("/Users/shuxiaochen/miniconda3/envs/cell/bin/python")
mario.match <- import("mario.match")
Mario = mario.match$Mario
# read in the first data
df1 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv")
df1 <- df1 %>% slice_sample(prop = 0.1) %>% select(-X1)
x_labels = df1 %>% select(cluster.info) %>% pull()
df1 <- df1 %>% select(-cluster.info)
# read in the second data
df2 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/wcctg-wb50k-cytof.csv")
df2 <- df2 %>% slice_sample(prop = 0.1) %>% select(-X1)
y_labels = df2 %>% select(cluster.info) %>% pull()
df2 <- df2 %>% select(-cluster.info)
mario = mario.match$Mario(df1, df2, normalization = TRUE)
dist_ovlp = mario$compute_dist_ovlp(n_components = as.integer(20))
mario$specify_matching_params(as.integer(1))
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=NULL, verbose=TRUE)
library(reticulate)
library(tidyverse)
use_python("/Users/shuxiaochen/miniconda3/envs/cell/bin/python")
mario.match <- import("mario.match")
Mario = mario.match$Mario
# read in the first data
df1 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv")
df1 <- df1 %>% slice_sample(prop = 0.1) %>% select(-X1)
x_labels = df1 %>% select(cluster.info) %>% pull()
df1 <- df1 %>% select(-cluster.info)
# read in the second data
df2 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/wcctg-wb50k-cytof.csv")
df2 <- df2 %>% slice_sample(prop = 0.1) %>% select(-X1)
y_labels = df2 %>% select(cluster.info) %>% pull()
df2 <- df2 %>% select(-cluster.info)
mario = mario.match$Mario(df1, df2, normalization = TRUE)
dist_ovlp = mario$compute_dist_ovlp(n_components = as.integer(20))
mario$specify_matching_params(as.integer(1))
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=NULL, verbose=TRUE)
matching_ovlp = mario$match_cells('ovlp', sparsity=NULL, mode='auto')
matching_ovlp
mario$matching$ovlp
mario.match_utils <- import("mario.match_utils")
x_labels
mario.match_utils$eval_matching_accuracy(X_labels, Y_labels, matching_ovlp, 'maj')
mario.match_utils$eval_matching_accuracy(x_labels, y_labels, matching_ovlp, 'maj')
x_labels
list(x_labels)
as.list(x_labels)
mario.match_utils$eval_matching_accuracy(as.list(x_labels), as.list(y_labels), matching_ovlp, 'maj')
# matching using all features
dist_all = mario.compute_dist_all('all', n_components=15)
# matching using all features
dist_all = mario$compute_dist_all('all', n_components=15)
# matching using all features
dist_all = mario$compute_dist_all('all', n_components=as.integer(15))
# matching using all features
dist_all = mario$compute_dist_all(n_components=as.integer(15))
dist_all
# matching using all features
dist_all = mario$compute_dist_all(matching = 'ovlp', n_components = as.integer(15))
matching_all = mario$match_cells('all', sparsity=NULL, mode='auto')
library(reticulate)
library(tidyverse)
use_python("/Users/shuxiaochen/miniconda3/envs/cell/bin/python")
mario.match <- import("mario.match")
Mario = mario.match$Mario
# read in the first data
df1 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv")
df1 <- df1 %>% slice_sample(prop = 0.05) %>% select(-X1)
x_labels = df1 %>% select(cluster.info) %>% pull()
df1 <- df1 %>% select(-cluster.info)
# read in the second data
df2 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/wcctg-wb50k-cytof.csv")
df2 <- df2 %>% slice_sample(prop = 0.05) %>% select(-X1)
y_labels = df2 %>% select(cluster.info) %>% pull()
df2 <- df2 %>% select(-cluster.info)
# matching using overlapping features
mario = mario.match$Mario(df1, df2, normalization = TRUE)
dist_ovlp = mario$compute_dist_ovlp(n_components = as.integer(20))
mario$specify_matching_params(as.integer(1))
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=NULL, verbose=TRUE)
matching_ovlp = mario$match_cells('ovlp', sparsity=NULL, mode='auto')
# matching using all features
dist_all = mario$compute_dist_all(matching = 'ovlp', n_components = as.integer(15))
matching_all = mario$match_cells(dist_mat = 'all', sparsity=NULL, mode='auto')
# test for matchability
mario$matchable(n_sim=20, top_k=5, flip_prob=0.3, subsample_prop=1, verbose=TRUE)
# test for matchability
mario$matchable(n_sim=as.integer(20), top_k=as.integer(5), flip_prob=0.3, subsample_prop=as.integer(1), verbose=TRUE)
# read in the first data
df1 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv")
df1 <- df1 %>% slice_sample(prop = 0.02) %>% select(-X1)
x_labels = df1 %>% select(cluster.info) %>% pull()
df1 <- df1 %>% select(-cluster.info)
# read in the second data
df2 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/wcctg-wb50k-cytof.csv")
df2 <- df2 %>% slice_sample(prop = 0.05) %>% select(-X1)
y_labels = df2 %>% select(cluster.info) %>% pull()
df2 <- df2 %>% select(-cluster.info)
# matching using overlapping features
mario = mario.match$Mario(df1, df2, normalization = TRUE)
dist_ovlp = mario$compute_dist_ovlp(n_components = as.integer(20))
mario$specify_matching_params(as.integer(1))
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=NULL, verbose=TRUE)
matching_ovlp = mario$match_cells('ovlp', sparsity=NULL, mode='auto')
# matching using all features
dist_all = mario$compute_dist_all(matching = 'ovlp', n_components = as.integer(15))
matching_all = mario$match_cells(dist_mat = 'all', sparsity=NULL, mode='auto')
# test for matchability
mario$matchable(n_sim=as.integer(20), top_k=as.integer(5), flip_prob=0.3, subsample_prop=as.integer(1), verbose=TRUE)
# interpolate
interpolate_res = mario$interpolate(n_wts=as.integer(10), top_k=as.integer(5), verbose=TRUE)
# filter
matching_final  = mario$filter_bad_matches(
matching='wted', n_clusters=as.integer(10), n_components=as.integer(10), bad_prop=0.1,
max_iter=as.integer(15), tol=1e-5, verbose=TRUE)
# knn matching
matching_knn = mario$knn_matching('wted', k=as.integer(5))
# embedding
cca_res = mario$fit_cca(mario$matching$final, n_components=as.integer(20), max_iter=as.integer(10000))
mario$matching$final
# embedding
cca_res = mario$fit_cca(mario$matching$final, n_components=as.integer(20), max_iter=as.integer(10000))
# embedding
cca_res = mario$fit_cca(matching=mario$matching$final, n_components=as.integer(20), max_iter=as.integer(10000))
library(reticulate)
library(tidyverse)
use_python("/Users/shuxiaochen/miniconda3/envs/cell/bin/python")
mario.match <- import("mario.match")
Mario = mario.match$Mario
# read in the first data
df1 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv")
df1 <- df1 %>% slice_sample(prop = 0.02) %>% select(-X1)
x_labels = df1 %>% select(cluster.info) %>% pull()
df1 <- df1 %>% select(-cluster.info)
# read in the second data
df2 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/wcctg-wb50k-cytof.csv")
df2 <- df2 %>% slice_sample(prop = 0.05) %>% select(-X1)
y_labels = df2 %>% select(cluster.info) %>% pull()
df2 <- df2 %>% select(-cluster.info)
# matching using overlapping features
mario = mario.match$Mario(df1, df2, normalization = TRUE)
dist_ovlp = mario$compute_dist_ovlp(n_components = as.integer(20))
mario$specify_matching_params(as.integer(1))
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=NULL, verbose=TRUE)
matching_ovlp = mario$match_cells('ovlp', sparsity=NULL, mode='auto')
# matching using all features
dist_all = mario$compute_dist_all(matching = 'ovlp', n_components = as.integer(15))
matching_all = mario$match_cells(dist_mat = 'all', sparsity=NULL, mode='auto')
# test for matchability
mario$matchable(n_sim=as.integer(20), top_k=as.integer(5), flip_prob=0.3, subsample_prop=as.integer(1), verbose=TRUE)
# interpolate
interpolate_res = mario$interpolate(n_wts=as.integer(10), top_k=as.integer(5), verbose=TRUE)
# filter
matching_final  = mario$filter_bad_matches(
matching='wted', n_clusters=as.integer(10), n_components=as.integer(10), bad_prop=0.1,
max_iter=as.integer(15), tol=1e-5, verbose=TRUE)
# knn matching
matching_knn = mario$knn_matching('wted', k=as.integer(5))
# embedding
cca_res = mario$fit_cca(matching=mario$matching$final, n_components=as.integer(20), max_iter=as.integer(10000))
mario$matching$final
class(mario$matching$final)
class(mario$matching$final[[0]])
class(mario$matching$final[[1]])
class(mario$matching$final[[1]][[1]])
class(mario$matching$final[[1]][[1])
dist_ovlp
library(reticulate)
library(tidyverse)
use_python("/Users/shuxiaochen/miniconda3/envs/cell/bin/python")
mario.match <- import("mario.match")
Mario = mario.match$Mario
# read in the first data
df1 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv")
df1 <- df1 %>% slice_sample(prop = 0.02) %>% select(-X1)
x_labels = df1 %>% select(cluster.info) %>% pull()
df1 <- df1 %>% select(-cluster.info)
# read in the second data
df2 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/wcctg-wb50k-cytof.csv")
df2 <- df2 %>% slice_sample(prop = 0.05) %>% select(-X1)
y_labels = df2 %>% select(cluster.info) %>% pull()
df2 <- df2 %>% select(-cluster.info)
# matching using overlapping features
mario = Mario(df1, df2, normalization = TRUE)
dist_ovlp = mario$compute_dist_ovlp(n_components = as.integer(20))
mario$specify_matching_params(as.integer(1))
mario$search_minimum_sparsity(mario$dist$ovlp, slackness=as.integer(1), init_sparsity=NULL, verbose=TRUE)
matching_ovlp = mario$match_cells('ovlp', sparsity=NULL, mode='auto')
# matching using all features
dist_all = mario$compute_dist_all(matching = 'ovlp', n_components = as.integer(15))
matching_all = mario$match_cells(dist_mat = 'all', sparsity=NULL, mode='auto')
# test for matchability
mario$matchable(n_sim=as.integer(10), top_k=as.integer(5), flip_prob=0.3, subsample_prop=as.integer(1), verbose=TRUE)
# interpolate
interpolate_res = mario$interpolate(n_wts=as.integer(10), top_k=as.integer(5), verbose=TRUE)
# filter
matching_final  = mario$filter_bad_matches(
matching='wted', n_clusters=as.integer(10), n_components=as.integer(10), bad_prop=0.1,
max_iter=as.integer(10), tol=1e-5, verbose=TRUE)
# knn matching
matching_knn = mario$knn_matching('wted', k=as.integer(5))
# embedding
cca_res = mario$fit_cca('final', n_components=as.integer(20), max_iter=as.integer(10000))
cca_res
cca_res[[2]]$x_scores_
dim(cca_res[[2]]$x_scores_)
dim(cca_res[[2]]$y_scores_)
list(1, 2)
setwd("~/Dropbox/Research/ongoing/single-cell-integration/mario-r")
pipelined_res = pipelined_mario(
data_lst=list(df1, df2), normalization=TRUE, n_batches=as.integer(4),
n_matched_per_cell=as.integer(3), sparsity_ovlp=NULL, sparsity_all=NULL,
n_components_ovlp=as.integer(20), n_components_all=as.integer(20),
n_cancor=as.integer(5), n_wts=as.integer(3),
n_clusters=as.integer(10), n_components_filter=as.integer(10), bad_prop=0.1, max_iter_filter=as.integer(5),
knn=as.integer(5), embed_dim=as.integer(20), max_iter_embed=as.integer(50), save_path='../data', verbose=FALSE
)
# full pipeline
pipelined_mario = mario.match$pipelined_mario
pipelined_res = pipelined_mario(
data_lst=list(df1, df2), normalization=TRUE, n_batches=as.integer(4),
n_matched_per_cell=as.integer(3), sparsity_ovlp=NULL, sparsity_all=NULL,
n_components_ovlp=as.integer(20), n_components_all=as.integer(20),
n_cancor=as.integer(5), n_wts=as.integer(3),
n_clusters=as.integer(10), n_components_filter=as.integer(10), bad_prop=0.1, max_iter_filter=as.integer(5),
knn=as.integer(5), embed_dim=as.integer(20), max_iter_embed=as.integer(50), save_path='../data', verbose=FALSE
)
int = as.integer
int(5)
as.numeric(1)
as.numeric(1.2)
as.integer(5)
as.integer(5)/2
as.integer(5)/as.integer(2)
library(reticulate)
library(tidyverse)
setwd("~/Dropbox/Research/ongoing/single-cell-integration/mario-py/tutorials")
df2_sub <- df2_sub %>% select(-cluster.info)
# import and subsample data
df1 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv") %>% select(-X1)
# import and subsample data
df1 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/vaxaart-wb50k-cytof.csv") %>% select(-X1)
df2 <- read_csv("/Users/shuxiaochen/Dropbox/Research/ongoing/single-cell-integration/data-biology/drop_out_test/wcctg-wb50k-cytof.csv") %>% select(-X1)
set.seed(2667)
df1_sub <- df1 %>% slice_sample(prop = 0.02)
df2_sub <- df2 %>% slice_sample(prop = 0.05)
# extract cluster labels
df1_labels = df1 %>% select(cluster.info) %>% pull()
df2_labels = df2 %>% select(cluster.info) %>% pull()
df1_sub_labels = df1_sub %>% select(cluster.info) %>% pull()
df2_sub_labels = df2_sub %>% select(cluster.info) %>% pull()
# remove non-numerical columns
df1 <- df1 %>% select(-cluster.info)
df2 <- df2 %>% select(-cluster.info)
df1_sub <- df1_sub %>% select(-cluster.info)
df2_sub <- df2_sub %>% select(-cluster.info)
capture.output(mario$search_minimum_sparsity(mario$dist$ovlp, slackness=int(1), init_sparsity=NULL, verbose=TRUE))
capture.output(sparsity_res = mario$search_minimum_sparsity(mario$dist$ovlp, slackness=int(1), init_sparsity=NULL, verbose=TRUE))
